let 
	mod = 
		fun x -> 
			fun y -> x - x / y * y 
			end 
		end
in 
	let 
		gcd = 
			fun x -> 
				fun y -> 
					if (( mod x ) y) = 0 
						then y 
						else ((gcd y)((mod x) y)) 
					end 
				end 
			end
	in ((gcd 34986) 3087)
	end
end
$

let a = 1 in 
	let b = 1 in
		b:= a;
		a:=2;
		b:=b+1;
		b+1
	end
end$

let a=1 in
	if true then a else a:=2 end
end$

let a = 10 in
	let b = 10 in 
		while a > 0 do b := b+1;a := a-1 end
	end;
	b
end$

let 
	mod = 
		fun x -> 
			fun y -> x - x / y * y 
			end 
		end
in 
	((mod 100) 7)
end$

let x = fun y -> if true then y else y:=2 end end in (x 1) end$

fun x -> fun y -> x:=y;x:=x+1 end end$

2::(1::nil)

let a = fun x -> if x > ~10 then (a x-1) else 0 end end in (a 100) end$